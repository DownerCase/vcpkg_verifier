@PACKAGE_INIT@

# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

if(TARGET unofficial::inih::inih)
  return()
endif()

set(INIH_WITH_INI_READER @with_INIReader@)
set(INIH_WITH_DEBUG @INIH_CONFIG_DEBUG@)

# Add library target (note: inih always has a static build in vcpkg).
add_library(unofficial::inih::inih STATIC IMPORTED)

set_target_properties(unofficial::inih::inih PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

set(INIH_LINK_LANGAUGES "C")
set(INIH_LINK_LIBRARIES_RELEASE "${_IMPORT_PREFIX}/lib/inih.lib")
set(INIH_HEADER_FILES "${_IMPORT_PREFIX}/include/ini.h")
if(INIH_WITH_INI_READER)
  list(APPEND INIH_LINK_LANGAUGES "CXX")
  list(APPEND INIH_LINK_LIBRARIES_RELEASE "${_IMPORT_PREFIX}/lib/INIReader.lib")
  list(APPEND INIH_HEADER_FILES "${_IMPORT_PREFIX}/include/INIReader.h")
endif()

list(APPEND _IMPORT_CHECK_FILES "${INIH_HEADER_FILES}")

# Add interface include directories and link interface languages (applies to all configurations).
set_target_properties(unofficial::inih::inih PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  IMPORTED_LINK_INTERFACE_LANGUAGES "${INIH_LINK_LANGAUGES}"
)

# Add release libraries
set_target_properties(unofficial::inih::inih PROPERTIES 
  IMPORTED_LOCATION_RELEASE "${INIH_LINK_LIBRARIES_RELEASE}"
)
list(APPEND _IMPORT_CHECK_FILES "${INIH_LINK_LIBRARIES_RELEASE}")

if(INIH_WITH_DEBUG)
  # Add debug libraries
  set(INIH_LINK_LIBRARIES_DEBUG "${_IMPORT_PREFIX}/debug/lib/inih.lib")
  if(INIH_WITH_INI_READER)
    list(APPEND INIH_LINK_LIBRARIES_DEBUG "${_IMPORT_PREFIX}/debug/lib/INIReader.lib")
  endif()
  set_target_properties(unofficial::inih::inih PROPERTIES 
    IMPORTED_LOCATION_DEBUG "${INIH_LINK_LIBRARIES_DEBUG}"
  )
  list(APPEND _IMPORT_CHECK_FILES "${INIH_LINK_LIBRARIES_DEBUG}")
endif()

# Check header and library files are present.
foreach(file ${_IMPORT_CHECK_FILES} )
  if(NOT EXISTS "${file}" )
    message(FATAL_ERROR "unofficial::inih::inih references the file
  \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
")
  endif()
endforeach()
unset(_IMPORT_CHECK_FILES)